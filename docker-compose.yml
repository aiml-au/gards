version: '3.7'
services:
  queue:
    image: nats:alpine
    container_name: queue
    restart: always
    expose:
      - 4222
      - 8222
      - 6222
    volumes:
      - ./queue/config:/etc/nats
      - ./queue/data:/tmp/nats/jetstream
  queue_setup:
    image: hashicorp/terraform
    container_name: queue_setup
    restart: "no"
    environment:
      TF_VAR_NATS_SERVERS: nats://queue:4222
    depends_on:
      queue:
        condition: service_started
    entrypoint: sh -c
    command: "\"terraform -chdir=/tf init && terraform -chdir=/tf apply -auto-approve\""
    volumes:
      - ./queue/init:/tf
  db:
    image: postgis/postgis
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    expose:
      - 5432
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/config:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "postgres" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 30s
  web:
    # image: docker.aiml.team/products/dra/gis-predictions/web:latest
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: web
    restart: always
    environment:
      - NATS_SERVERS=nats://queue:4222
      - DB_URL=postgres://web:s7n7Q5wPk8peGGSXfPk8pewXkA@db:5432/postgres?sslmode=disable
      - GOOGLE_CLOUD_PROJECT=aiml-dra-anomaly
      - REMOTE_FS=gs://aiml-dra-anomaly-data/working_dir
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
    ports:
      - 8000:8000
    depends_on:
      queue:
        condition: service_started
      queue_setup:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    volumes:
      - ~/.cache:/root/.cache
      - ~/.config/gcloud:/root/.config/gcloud/
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--output", "/dev/null", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
  predictor:
    # image: docker.aiml.team/products/dra/gis-predictions/predictor:latest
    build:
      context: ./predictor
      dockerfile: Dockerfile
    container_name: predictor
    restart: always
    ipc: host
    ulimits:
      memlock: -1
      stack: 67108864
    environment:
      - NATS_SERVERS=nats://queue:4222
      - GOOGLE_CLOUD_PROJECT=aiml-dra-anomaly
      - REMOTE_FS=gs://aiml-dra-anomaly-data/working_dir
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
    depends_on:
      queue:
        condition: service_started
      queue_setup:
        condition: service_completed_successfully
    volumes:
      - ~/.cache:/root/.cache
      - ~/.config/gcloud:/root/.config/gcloud
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: [ "0" ]
              capabilities: [ gpu ]
